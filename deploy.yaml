---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-controller
  namespace: network-system
stringData:
  token: TOKEN
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    secret.reloader.stakater.com/reload: cloudflarerecord-controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-controller
  namespace: network-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: cloudflarerecord
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: cloudflarerecord
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: cloudflarerecord-controller
        image: ghcr.io/illallangi/cloudflarerecord-controller:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        name: controller
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
      serviceAccount: cloudflarerecord-controller
      serviceAccountName: cloudflarerecord-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-controller
  namespace: network-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-controller
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - controllers.illallangi.enterprises
  resources:
  - cloudflarerecords
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-controller
  namespace: network-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloudflarerecord-controller
subjects:
- kind: ServiceAccount
  name: cloudflarerecord-controller
  namespace: network-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cloudflarerecord-controller
subjects:
- kind: ServiceAccount
  name: cloudflarerecord-controller
  namespace: network-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: cloudflarerecord-ddns
  labels:
    app.kubernetes.io/component: ddns
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-ddns
  namespace: network-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: ddns
      app.kubernetes.io/name: cloudflarerecord
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: ddns
        app.kubernetes.io/name: cloudflarerecord
    spec:
      containers:
      - image: ghcr.io/joshuaavalon/cloudflare-ddns:2.7.0
        imagePullPolicy: IfNotPresent
        name: cloudflare-ddns
        volumeMounts:
        - mountPath: /app/config.yaml
          name: config
          subPath: config.yaml
      serviceAccount: cloudflarerecord-ddns
      serviceAccountName: cloudflarerecord-ddns
      volumes:
      - configMap:
          name: cloudflarerecord-ddns
        name: config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: ddns
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-ddns
  namespace: network-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: ddns
    app.kubernetes.io/name: cloudflarerecord
  name: cloudflarerecord-ddns
  namespace: network-system
